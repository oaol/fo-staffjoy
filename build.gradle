buildscript {
    ext {
        springBootVersion = '2.1.7.RELEASE'
        springCloudVersion = 'Greenwich.RELEASE'
    }
    repositories {
        maven { url 'http://maven.aliyun.com/nexus/content/groups/public/' }
        jcenter()
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

allprojects  {
  apply plugin: 'maven'
  group = 'fo.staffjoy'
  version = '1.0.0'
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'eclipse'
    apply plugin: 'idea'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'
    //编译属性
    sourceCompatibility = 1.8
    targetCompatibility = 1.8
    tasks.withType(JavaCompile) {
        options.encoding = 'UTF-8'
    }

    repositories {
        maven { url 'http://maven.aliyun.com/nexus/content/groups/public/' }
        jcenter()
        mavenCentral()
    }

    dependencies {

        implementation 'org.springframework.boot:spring-boot-starter'
        compileOnly 'org.projectlombok:lombok'
        annotationProcessor 'org.projectlombok:lombok'
        compile 'org.springframework.boot:spring-boot-devtools'
        testImplementation 'org.springframework.boot:spring-boot-starter-test'
        implementation 'org.springframework.boot:spring-boot-starter-web'
        implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'
        // use in-memory db for unit testing
        testImplementation 'com.h2database:h2'
        implementation 'org.apache.commons:commons-lang3:3.4'
        implementation 'com.auth0:java-jwt:3.8.2'
        implementation 'org.springframework.boot:spring-boot-starter-actuator'
        implementation 'org.modelmapper:modelmapper:2.3.3'
        implementation 'structlog4j:structlog4j-api:1.0.0'
         // Optional JSON formatter
        implementation 'structlog4j:structlog4j-json:1.0.0'
        // Optional YAML formatter
        implementation 'structlog4j:structlog4j-yaml:1.0.0'
    }

    dependencyManagement {
        imports {
            //spring bom helps us to declare dependencies without specifying version numbers.
            mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
            mavenBom "org.springframework.boot:spring-boot-dependencies:${springBootVersion}"
        }
    }
}